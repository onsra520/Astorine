import sys
import os
from pathlib import Path
import pandas as pd
import json5

root = Path(__file__).resolve().parents[2]
sys.path.append(str(root))
from data.pipelines.cdata import data_cleaning

paths = {
    "processed": os.path.abspath(f"{root}/data/storage/processed"),
    "odata": os.path.abspath(f"{root}/data/storage/processed/final_cleaning.csv"),
    "qfragments": os.path.abspath(f"{root}/intents/qfragments.json"),
    "questions": os.path.abspath(f"{root}/intents/questions.json"),
}

if not os.path.exists(paths["odata"]):
    print("Data not found. Running data cleaning pipeline...")
    odata = data_cleaning()

odata, data = pd.read_csv(paths["odata"]), {}

data["resolution"] = {
    "3072 x 1920": ["3072 x 1920", "3K", "3072p", "Triple HD"],
    "1920 x 1200": ["1920 x 1200", "WUXGA", "16:10 HD+", "HD+ (16:10)"],
    "2560 x 1600": ["2560 x 1600", "WQXGA", "Quad Extended (16:10)", "Retina-like"],
    "2560 x 1440": ["2560 x 1440", "QHD", "Quad HD", "2K", "WQHD"],
    "1920 x 1080": ["1920 x 1080", "FHD", "Full HD",  "1080p"],
    "3840 x 2160": ["3840 x 2160", "4K UHD", "4K", "UHD", "Ultra HD", "2160p"],
    "2880 x 1800": ["2880 x 1800", "Retina 15", "QHD+ (16:10)"],
    "3840 x 2400": ["3840 x 2400", "WQUXGA", "16:10 4K+"],
    "3200 x 2000": ["3200 x 2000", "QHD+", "3K2K", "WQXGA+ (16:10)"],
    "2880 x 1620": ["2880 x 1620", "QHD+ 16:9", "16:9 QHD+", "3K2K (16:9)"],
    "3456 x 2160": ["3456 x 2160", "Retina 16", "16-inch Retina", "3,5k", "3K5", "3.5K"],
    "2400 x 1600": ["2400 x 1600", "QXGA+", "3:2 display"],
}

data["cpu"] = {
    "intel": {
        "core i5": {},
        "core i7": {},
        "core i9": {},
        "core ultra 7": {},
        "core ultra 9": {},
    },
    "amd": {
        "ryzen 5": {},
        "ryzen 7": {},
        "ryzen 9": {},
        "ryzen 5 pro": {},
        "ryzen 7 pro": {},
        "ryzen 9 pro": {},
        "ryzen ai 5": {},
        "ryzen ai 7": {},
        "ryzen ai 9": {},
    },
}

intel = []
amd = []
for cpu in odata["CPU"]:
    if "Intel" in cpu:
        intel.append(cpu)
    elif "AMD" in cpu:
        amd.append(cpu)

intel = list(set(intel))
amd = list(set(amd))

for intel_cpu in intel:
    for brand_modifier in data["cpu"]["intel"]:
        sku_numeric_digits = "".join(filter(str.isdigit, intel_cpu.split(" ")[-1]))
        suffix = "".join(filter(str.isalpha, intel_cpu.split(" ")[-1]))
        if brand_modifier not in ["core ultra 7", "core ultra 9"] and brand_modifier in intel_cpu.lower():
            if sku_numeric_digits.startswith("1"):
                generation = f"{sku_numeric_digits[0:2]} series"
            else:
                generation = f"{sku_numeric_digits[0:1]} series"
            if generation not in data["cpu"]["intel"][brand_modifier]:
                data["cpu"]["intel"][brand_modifier][generation] = {}
            data["cpu"]["intel"][brand_modifier][generation][intel_cpu] = suffix

        elif brand_modifier in ["core ultra 7", "core ultra 9"] and brand_modifier in intel_cpu.lower():
            generation = f"{sku_numeric_digits} series"
            if generation not in data["cpu"]["intel"][brand_modifier]:
                data["cpu"]["intel"][brand_modifier][generation] = {}
            data["cpu"]["intel"][brand_modifier][generation][intel_cpu] = suffix

for amd_cpu in amd:
    cpu_lower = amd_cpu.lower()
    for brand_modifier in data["cpu"]["amd"]:
        if brand_modifier in cpu_lower:
            remove_str = f"amd {brand_modifier}"
            sku_numeric_digits_suffix = cpu_lower.replace(remove_str, "").strip()
            break
    sku_numeric_digits = "".join(filter(str.isdigit, sku_numeric_digits_suffix))
    suffix = "".join(filter(str.isalpha, sku_numeric_digits_suffix))
    if len(sku_numeric_digits) == 4:
        generation = f"{sku_numeric_digits[0:1]} series"
    else:
        generation = f"{sku_numeric_digits} series"

    if generation not in data["cpu"]["amd"][brand_modifier]:
        data["cpu"]["amd"][brand_modifier][generation] = {}
    data["cpu"]["amd"][brand_modifier][generation][amd_cpu] = suffix

templates = [
    "recommend me some laptops [sub_brand] have [component]",
    "give me some recommendations for laptops [sub_brand] with [component]",
    "Find high-performance laptops [sub_brand] that include [component]",
    "Suggest powerful laptops [sub_brand] with [component]",
    "I am looking for laptops [sub_brand] equipped with [component]",
    "Show me some laptops [sub_brand] that have [component]",
    "Please suggest laptops [sub_brand] with [component]",
    "Could you recommend laptops [sub_brand] that come with [component]",
    "I am searching for laptops [sub_brand] featuring [component]",
    "Find me a laptop [sub_brand] with [component]",
    "What laptops [sub_brand] are available that include [component]",
    "I need a laptop [sub_brand] equipped with [component]",
    "Help me find laptops [sub_brand] with [component]",
    "Looking for laptops [sub_brand] that have [component]",
    "I require a laptop [sub_brand] with [component]",
    "Suggest some laptops [sub_brand] with [component]",
    "Provide recommendations for laptops [sub_brand] featuring [component]",
    "Any laptops [sub_brand] available with [component]",
    "Show me laptops [sub_brand] that are equipped with [component]",
    "I am interested in laptops [sub_brand] that come with [component]",
    "Looking to buy laptops [sub_brand] with [component]",
    "What are some laptops [sub_brand] having [component]",
    "Do you have laptops [sub_brand] with [component]",
    "I'd like recommendations for laptops [sub_brand] that include [component]",
    "Could you suggest laptops [sub_brand] having [component]",
    "Which laptops [sub_brand] should I consider with [component]",
    "Do you recommend laptops [sub_brand] equipped with [component]",
    "Can you provide recommendations for laptops [sub_brand] featuring [component]",
    "Please give me suggestions for laptops [sub_brand] with [component]",
    "Recommend some laptops [sub_brand] that come with [component]",
    "What are your top picks for laptops [sub_brand] having [component]",
    "Suggest laptops [sub_brand] with the following features [component]",
    "Look for laptops [sub_brand] with high performance and [component]",
    "Find laptops [sub_brand] that offer high performance, including [component]",
    "Seek out powerful laptops [sub_brand] equipped with [component]",
    "Can you find me laptops [sub_brand] with top-tier performance:  [component]",
    "I am looking for laptops [sub_brand] with excellent performance [component]",
    "Recommend some strong laptops [sub_brand] with [component]",
    "Suggest robust laptops [sub_brand] featuring [component]",
    "High-powered laptops [sub_brand] that include [component]",
    "Powerful laptops [sub_brand] equipped with [component]",
    "Strong laptops [sub_brand] with high specs [component]",
    "Can you show me laptops [sub_brand] that include [component]",
    "View laptops [sub_brand] with these features [component]",
    "What laptops [sub_brand] can I see that feature [component]",
    "Letâ€™s look at laptops [sub_brand] equipped with [component]",
    "Could you recommend laptops [sub_brand] featuring [component]",
    "Please suggest some laptops [sub_brand] having [component]",
    "Recommend laptops [sub_brand] equipped with [component]",
    "Can you propose laptops [sub_brand] with [component]",
    "Would you mind suggesting laptops [sub_brand] that come with [component]",
    "Do you have any recommendations for laptops [sub_brand] including [component]",
    "Could you suggest laptops [sub_brand] that feature [component]",
    "Recommend laptops [sub_brand] with these specifications [component]",
    "Which laptops [sub_brand] would you recommend featuring [component]",
    "Looking for laptops [sub_brand] that come with [component]",
    "I am on the lookout for laptops [sub_brand] with [component]",
    "Trying to find laptops [sub_brand] having [component]",
    "Seeking laptops [sub_brand] equipped with [component]",
    "Looking for laptops [sub_brand] that include [component]",
    "On the hunt for laptops [sub_brand] featuring [component]",
    "Can you help me find a laptop [sub_brand] that has [component]",
    "Could you find a laptop [sub_brand] with these features [component]",
    "Look for a laptop [sub_brand] that includes [component]",
    "Find a laptop [sub_brand] equipped with [component]",
    "I need to find a laptop [sub_brand] having [component]",
    "Which laptops [sub_brand] do you have that feature [component]",
    "What kinds of laptops [sub_brand] can be found with [component]",
    "Available laptops [sub_brand] that include [component]",
    "Can you provide a list of laptops [sub_brand] featuring [component]",
    "Looking for laptops [sub_brand] in your inventory that [component]",
    "I require a laptop [sub_brand] with [component]",
    "Need to find a laptop [sub_brand] having [component]",
    "I am looking for a laptop [sub_brand] equipped with [component]",
    "I am in the market for a laptop [sub_brand] including [component]",
    "Require a laptop [sub_brand] with these features [component]",
    "Could you assist me in finding laptops [sub_brand] that have [component]",
    "Help me locate laptops [sub_brand] featuring [component]",
    "Looking to be guided in finding laptops [sub_brand] with [component]",
    "In need of help finding laptops [sub_brand] having [component]",
    "Assistance in finding laptops [sub_brand] equipped with [component]",
    "I am exploring laptops [sub_brand] that include [component]",
    "Searching for laptops [sub_brand] that feature [component]",
    "Seeking out laptops [sub_brand] that come with [component]",
    "Looking to find laptops [sub_brand] with these features [component]",
    "In the market for laptops [sub_brand] having [component]",
    "Need a laptop [sub_brand] with [component]",
    "Require a laptop [sub_brand] featuring [component]",
    "I need a laptop [sub_brand] equipped with [component]",
    "Must have a laptop [sub_brand] including [component]",
    "The laptop [sub_brand] needs to have [component]",
    "Recommend a few laptops [sub_brand] that feature [component]",
    "Suggest some laptops [sub_brand] having these features [component]",
    "Could you recommend laptops [sub_brand] with the following:  [component]",
    "What are your suggestions for laptops [sub_brand] featuring: [component]",
    "Please suggest a couple of laptops [sub_brand] with [component]",
    "Can you provide recommendations on laptops [sub_brand] including [component]",
    "Suggestions for laptops [sub_brand] with these features [component]",
    "Looking for recommendations for laptops [sub_brand] having [component]",
    "Recommendations for laptops [sub_brand] that feature [component]",
    "Would you be able to recommend laptops [sub_brand] that include [component]",
    "Are there any laptops [sub_brand] available featuring [component]",
    "Do you have laptops [sub_brand] available with [component]",
    "Any laptops [sub_brand] on your list that include [component]",
    "Looking at the options, are there any laptops [sub_brand] with [component]",
    "Available laptops [sub_brand] with these features: [component]",
    "Can you show me some laptops [sub_brand] with [component]",
    "Display laptops [sub_brand] equipped with [component]",
    "I would like to see laptops [sub_brand] that have [component]",
    "Show me laptops [sub_brand] featuring these specifications [component]",
    "Letâ€™s look at laptops [sub_brand] that include [component]",
    "Interested in finding laptops [sub_brand] that feature [component]",
    "Looking for laptops [sub_brand] equipped with [component]",
    "Excited about laptops [sub_brand] having [component]",
    "Interested to find laptops [sub_brand] with [component]",
    "Seeking laptops [sub_brand] including these features [component]",
    "Planning to purchase laptops [sub_brand] featuring [component]",
    "Considering buying laptops [sub_brand] with [component]",
    "Thinking of looking for laptops [sub_brand] that have [component]",
    "In the process of finding laptops [sub_brand] equipped with [component]",
    "Aim to find laptops [sub_brand] having [component]",
    "What kinds of laptops [sub_brand] include [component]",
    "Can you tell me about laptops [sub_brand] featuring [component]",
    "What types of laptops [sub_brand] should I look at that include [component]",
    "Looking for information on laptops [sub_brand] having [component]",
    "Inquiring about laptops [sub_brand] with these features [component]",
    "Do you offer laptops [sub_brand] with [component]",
    "Have any laptops [sub_brand] available that feature [component]",
    "Are there laptops [sub_brand] in your collection with [component]",
    "Does your selection include laptops [sub_brand] that [component]",
    "Is there a laptop [sub_brand] available that [component]",
]

sub_templates = [
    "[component] laptop [sub_brand] suitable for [use_case]?",
    "[component] laptop [sub_brand] ideal for [use_case]?",
    "[component] laptop [sub_brand] recommended for [use_case]?",
    "[component] laptop [sub_brand] best for [use_case]?",
    "[component] laptop [sub_brand] designed for [use_case]?",
    "[component] laptop [sub_brand] capable of [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case]?",
    "[component] laptop [sub_brand] efficient for [use_case]?",
    "[component] laptop [sub_brand] powerful enough for [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case]?",
    "[component] laptop [sub_brand] tailored for [use_case]?",
    "[component] laptop [sub_brand] equipped for [use_case]?",
    "[component] laptop [sub_brand] ideal for [use_case] tasks?",
    "[component] laptop [sub_brand] suitable for [use_case] applications?",
    "[component] laptop [sub_brand] designed to handle [use_case]?",
    "[component] laptop [sub_brand] capable of performing [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] performance?",
    "[component] laptop [sub_brand] efficient for [use_case] operations?",
    "[component] laptop [sub_brand] powerful enough to run [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] needs?",
    "[component] laptop [sub_brand] tailored to [use_case] requirements?",
    "[component] laptop [sub_brand] equipped to handle [use_case]?",
    "[component] laptop [sub_brand] ideal for [use_case] projects?",
    "[component] laptop [sub_brand] suitable for [use_case] environments?",
    "[component] laptop [sub_brand] designed for [use_case] scenarios?",
    "[component] laptop [sub_brand] capable of supporting [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] tasks?",
    "[component] laptop [sub_brand] efficient for [use_case] workflows?",
    "[component] laptop [sub_brand] powerful enough for [use_case] operations?",
    "[component] laptop [sub_brand] perfect for [use_case] applications?",
    "[component] laptop [sub_brand] tailored for [use_case] solutions?",
    "[component] laptop [sub_brand] equipped for [use_case] challenges?",
    "[component] laptop [sub_brand] ideal for [use_case] endeavors?",
    "[component] laptop [sub_brand] suitable for [use_case] missions?",
    "[component] laptop [sub_brand] designed to excel in [use_case]?",
    "[component] laptop [sub_brand] capable of mastering [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] efficiency?",
    "[component] laptop [sub_brand] efficient for [use_case] productivity?",
    "[component] laptop [sub_brand] powerful enough to tackle [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] performance?",
    "[component] laptop [sub_brand] tailored for [use_case] excellence?",
    "[component] laptop [sub_brand] equipped to achieve [use_case] goals?",
    "[component] laptop [sub_brand] ideal for [use_case] success?",
    "[component] laptop [sub_brand] suitable for [use_case] outcomes?",
    "[component] laptop [sub_brand] designed to meet [use_case] standards?",
    "[component] laptop [sub_brand] capable of delivering [use_case] results?",
    "[component] laptop [sub_brand] optimized for [use_case] effectiveness?",
    "[component] laptop [sub_brand] efficient for [use_case] efficiency?",
    "[component] laptop [sub_brand] powerful enough to ensure [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] satisfaction?",
    "[component] laptop [sub_brand] tailored for [use_case] fulfillment?",
    "[component] laptop [sub_brand] equipped to provide [use_case] benefits?",
    "[component] laptop [sub_brand] ideal for [use_case] advantages?",
    "[component] laptop [sub_brand] suitable for [use_case] improvements?",
    "[component] laptop [sub_brand] designed to enhance [use_case]?",
    "[component] laptop [sub_brand] capable of boosting [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] growth?",
    "[component] laptop [sub_brand] efficient for [use_case] development?",
    "[component] laptop [sub_brand] powerful enough to support [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] progress?",
    "[component] laptop [sub_brand] tailored for [use_case] advancement?",
    "[component] laptop [sub_brand] equipped to drive [use_case] forward?",
    "[component] laptop [sub_brand] ideal for [use_case] innovation?",
    "[component] laptop [sub_brand] suitable for [use_case] breakthroughs?",
    "[component] laptop [sub_brand] designed to foster [use_case]?",
    "[component] laptop [sub_brand] capable of facilitating [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] success?",
    "[component] laptop [sub_brand] efficient for [use_case] achievement?",
    "[component] laptop [sub_brand] powerful enough to realize [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] fulfillment?",
    "[component] laptop [sub_brand] tailored for [use_case] completion?",
    "[component] laptop [sub_brand] equipped to accomplish [use_case]?",
    "[component] laptop [sub_brand] ideal for [use_case] realization?",
    "[component] laptop [sub_brand] suitable for [use_case] attainment?",
    "[component] laptop [sub_brand] designed to achieve [use_case]?",
    "[component] laptop [sub_brand] capable of reaching [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] execution?",
    "[component] laptop [sub_brand] efficient for [use_case] performance?",
    "[component] laptop [sub_brand] powerful enough to perform [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] operation?",
    "[component] laptop [sub_brand] tailored for [use_case] function?",
    "[component] laptop [sub_brand] equipped to carry out [use_case]?",
    "[component] laptop [sub_brand] ideal for [use_case] task?",
    "[component] laptop [sub_brand] suitable for [use_case] duty?",
    "[component] laptop [sub_brand] designed to perform [use_case]?",
    "[component] laptop [sub_brand] capable of executing [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] activity?",
    "[component] laptop [sub_brand] efficient for [use_case] endeavor?",
    "[component] laptop [sub_brand] powerful enough to undertake [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] mission?",
    "[component] laptop [sub_brand] tailored for [use_case] project?",
    "[component] laptop [sub_brand] equipped to handle [use_case] assignment?",
    "[component] laptop [sub_brand] ideal for [use_case] responsibility?",
    "[component] laptop [sub_brand] suitable for [use_case] obligation?",
    "[component] laptop [sub_brand] designed to manage [use_case]?",
    "[component] laptop [sub_brand] capable of overseeing [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] supervision?",
    "[component] laptop [sub_brand] efficient for [use_case] control?",
    "[component] laptop [sub_brand] powerful enough to direct [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] guidance?",
    "[component] laptop [sub_brand] tailored for [use_case] leadership?",
    "[component] laptop [sub_brand] equipped to steer [use_case]?",
    "[component] laptop [sub_brand] ideal for [use_case] command?",
    "[component] laptop [sub_brand] suitable for [use_case] administration?",
    "[component] laptop [sub_brand] designed to govern [use_case]?",
    "[component] laptop [sub_brand] capable of ruling [use_case]?",
    "[component] laptop [sub_brand] optimized for [use_case] management?",
    "[component] laptop [sub_brand] efficient for [use_case] regulation?",
    "[component] laptop [sub_brand] powerful enough to supervise [use_case]?",
    "[component] laptop [sub_brand] perfect for [use_case] oversight?",
    "[component] laptop [sub_brand] tailored for [use_case] coordination?",
    "[component] laptop [sub_brand] equipped to organize [use_case]?",
    "[component] laptop [sub_brand] ideal for [use_case] arrangement?",
    "[component] laptop [sub_brand] suitable for [use_case] planning?",
    "[component] laptop [sub_brand] designed for [use_case] ?",
]

use_case = [
    "use for training machine learning models",
    "use for data analysis tasks",
    "use for data science projects",
    "can handle machine learning workloads",
    "capable of running deep learning models",
    "sufficient for gaming",
    "able to run games",
    "capable of running AAA games",
    "ideal for video editing and graphic design",
    "suitable for software development and coding",
    "perfect for 3D modeling and rendering",
    "designed for high-performance computing tasks",
    "optimized for multitasking and productivity",
    "equipped for running virtual machines",
    "ideal for content creation and multimedia editing",
    "suitable for running complex simulations",
    "designed for high-resolution gaming",
    "capable of handling intensive computational tasks",
    "optimized for running resource-intensive applications",
    "suitable for running advanced data analysis tools",
    "ideal for running complex algorithms",
    "designed for high-speed data processing",
    "capable of handling large datasets",
    "optimized for running data visualization tools",
    "suitable for running statistical analysis software",
    "ideal for running machine learning frameworks",
    "designed for high-performance gaming",
    "capable of running the latest AAA titles",
    "optimized for immersive gaming experiences",
    "suitable for running virtual reality applications",
    "ideal for streaming and content creation",
    "designed for high-fidelity audio and video editing",
    "capable of handling 4K video editing",
    "optimized for running resource-intensive games",
    "suitable for running high-end graphics applications",
    "ideal for running complex 3D simulations",
    "designed for high-speed internet browsing",
    "capable of handling multiple applications simultaneously",
    "optimized for running cloud-based applications",
    "suitable for running enterprise-level software",
    "ideal for running advanced engineering applications",
    "designed for high-performance scientific computing",
    "capable of handling large-scale data analysis",
    "optimized for running big data applications",
    "suitable for running high-performance databases",
    "ideal for running complex financial models",
    "designed for high-speed data transfer",
    "capable of handling high-resolution displays",
    "optimized for running advanced gaming graphics",
    "suitable for running high-end graphic design software",
    "ideal for running complex video editing software",
    "designed for high-performance audio production",
    "capable of handling advanced photo editing tasks",
    "optimized for running resource-intensive applications",
    "suitable for running high-end CAD software",
    "ideal for running complex engineering simulations",
    "designed for high-performance scientific research",
    "capable of handling large-scale simulations",
    "optimized for running advanced machine learning algorithms",
    "suitable for running high-performance computing tasks",
    "ideal for running complex data analysis models",
    "designed for high-speed data processing",
    "capable of handling large-scale data visualization",
    "optimized for running advanced statistical analysis",
    "suitable for running high-performance data mining tools",
    "ideal for running complex data modeling software",
    "designed for high-performance data analytics",
    "capable of handling large-scale data processing",
    "optimized for running advanced data visualization tools",
    "suitable for running high-performance data analysis software",
    "ideal for running complex data mining algorithms",
    "designed for high-speed data analysis",
    "capable of handling large-scale data modeling",
    "optimized for running advanced data mining tools",
    "suitable for running high-performance data modeling software",
    "ideal for running complex data analytics algorithms",
    "designed for high-performance data visualization",
    "capable of handling large-scale data mining",
    "optimized for running advanced data analytics tools",
    "suitable for running high-performance data mining software",
    "ideal for running complex data visualization algorithms",
    "designed for high-speed data mining",
    "capable of handling large-scale data analytics",
    "optimized for running advanced data modeling tools",
    "suitable for running high-performance data analytics software",
    "ideal for running complex data mining algorithms",
    "designed for high-performance data modeling",
    "capable of handling large-scale data visualization",
    "optimized for running advanced data mining tools",
    "suitable for running high-performance data modeling software",
    "ideal for running complex data analytics algorithms",
    "designed for high-speed data visualization",
    "capable of handling large-scale data mining",
    "optimized for running advanced data analytics tools",
    "suitable for running high-performance data mining software",
    "ideal for running complex data visualization algorithms",
    "designed for high-performance data mining",
    "capable of handling large-scale data analytics",
    "optimized for running advanced data modeling tools",
    "suitable for running high-performance data analytics software",
    "ideal for running complex data mining algorithms",
    "designed for high-speed data modeling",
    "capable of handling large-scale data visualization",
    "optimized for running advanced data mining tools",
    "suitable for running high-performance data modeling software",
    "ideal for running complex data analytics algorithms",
    "designed for high-performance data visualization",
    "capable of handling large-scale data mining",
    "optimized for running advanced data analytics tools",
    "suitable for running high-performance data mining software",
    "ideal for running complex data visualization algorithms",
    "designed for high-speed data mining",
    "capable of handling large-scale data analytics",
    "optimized for running advanced data modeling tools",
    "suitable for running high-performance data analytics software",
    "ideal for running complex data mining algorithms",
    "designed for high-performance data modeling",
    "capable of handling large-scale data visualization",
    "optimized for running advanced data mining tools",
    "suitable for running high-performance data modeling software",
    "ideal for running complex data analytics algorithms",
    "designed for high-speed data visualization",
    "capable of handling large-scale data mining",
    "optimized for running advanced data analytics tools",
    "suitable for running high-performance data mining software",
    "ideal for running complex data visualization algorithms",
    "designed for high-performance data mining",
    "capable of handling large-scale data analytics",
    "optimized for running advanced data modeling tools",
    "suitable for running high-performance data analytics software",
    "ideal for running complex data mining algorithms",
    "designed for high-speed data modeling",
    "capable of handling large-scale data visualization",
    "optimized for running advanced data mining tools",
    "suitable for running high-performance data modeling software",
    "ideal for running complex data analytics algorithms",
    "designed for high-performance data visualization",
    "capable of handling large-scale data mining",
    "optimized for running advanced data analytics tools",
    "suitable for running high-performance data mining software",
    "ideal for running complex data visualization algorithms",
    "designed for high-speed data mining",
    "capable of handling large-scale data analytics",
    "optimized for running advanced data modeling tools",
    "suitable for running high-performance data analytics software",
    "ideal for running complex data mining algorithms",
    "designed for high-performance",
]

sub_brand = [
    ". This product belongs to [brand],",
    ". This item is created by [brand],",
    ". It is manufactured by [brand],",
    ". It is designed by [brand],",
    ". It is produced by [brand],",
    ". It is developed by [brand],",
    ". It is a [brand] product,",
    ". It is offered by [brand],",
    ". It comes from [brand],",
    ". It is endorsed by [brand],",
    ". The brand behind this product is [brand],",
    "crafted by [brand],",
    "brought to you by [brand],",
    "presented by [brand],",
    "created by the team at [brand],",
    "developed in-house by [brand],",
    ". A [brand] exclusive,",
    "brought to life by [brand],",
    ". An innovation from [brand],",
    "designed exclusively by [brand],",
    "engineered by [brand],",
    "assembled by [brand],",
    "produced with care by [brand],",
    ". This item comes courtesy of [brand],",
    "curated by [brand],",
    "made possible by [brand],",
]

money_terms = [
    "and under [money]",
    "and I can spent under [money]",
    "about [money]",
    "I can spent about [money]",
    "approximately [money]",
    "around [money]",
    "roughly [money]",
    "nearly [money]",
    "just under [money]",
    "a little less than [money]",
    "close to [money]",
    "in the region of [money]",
    "in the vicinity of [money]",
    "in the ballpark of [money]",
    "circa [money]",
    "on the order of [money]",
    "in the neighborhood of [money]",
    "just about [money]",
    "almost [money]",
    "slightly below [money]",
    "a bit under [money]",
    "not exceeding [money]",
    "more or less [money]",
    "over [money]",
    "more than [money]",
    "above [money]",
    "at least [money]",
    "exceeding [money]",
    "beyond [money]",
    "in excess of [money]",
    "greater than [money]",
    "surpassing [money]",
    "from [money_1] to [money_2]",
    "between [money_1] and [money_2]",
    "ranging from [money_1] to [money_2]",
    "in the range of [money_1] to [money_2]",
    "spanning from [money_1] to [money_2]",
    "within the interval of [money_1] to [money_2]",
    "covering [money_1] to [money_2]",
    "extending from [money_1] to [money_2]",
    "fluctuating between [money_1] and [money_2]",
    "The maximum budget is [money].",
    "My budget cap is [money].",
    "I am limited to a maximum budget of [money].",
    "not exceeding a budget of [money].",
    "up to a maximum of [money] can be spent.",
    "The maximum allowable budget is [money].",
    "The expenditure limit is [money].",
    "Maximum spending limit: [money].",
    "Budget ceiling is set at [money].",
    "The maximum amount I can spend is [money].",
]

def assembler():
    """
    Assembles data from various categories into a dictionary and writes it 
    to a JSON file.

    This function populates the `data` dictionary with predefined templates, 
    use cases, sub questions, sub brands, and money terms. It then writes 
    this data into a JSON file specified by `paths["qfragments"]`, ensuring 
    the content is formatted with UTF-8 encoding and indented for 
    readability.
    """
    data["templates"] = templates
    data["use case"] = use_case
    data["sub questions"] = sub_templates
    data["sub brand"] = sub_brand
    data["money"] = money_terms
    with open(paths["qfragments"], "w", encoding="utf-8") as f:
        json5.dump(data, f, ensure_ascii=False, indent=4)

if __name__ == "__main__":
    assembler()
